"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_app_slices_RichText_index_js",{

/***/ "(app-pages-browser)/./src/app/slices/RichText/index.js":
/*!******************************************!*\
  !*** ./src/app/slices/RichText/index.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _prismicio_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prismicio/react */ \"(app-pages-browser)/./node_modules/@prismicio/react/dist/PrismicRichText.js\");\n/**\n * @typedef {import(\"@prismicio/client\").Content.RichTextSlice} RichTextSlice\n * @typedef {import(\"@prismicio/react\").SliceComponentProps<RichTextSlice>} RichTextProps\n * @param {RichTextProps}\n */ \n\nconst RichText = (param)=>{\n    let { slice } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n        \"data-slice-type\": slice.slice_type,\n        \"data-slice-variation\": slice.variation,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_prismicio_react__WEBPACK_IMPORTED_MODULE_1__.PrismicRichText, {\n                field: slice.item.title\n            }, void 0, false, {\n                fileName: \"/Users/elodie/bonjouridol/src/app/slices/RichText/index.js\",\n                lineNumber: 14,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_prismicio_react__WEBPACK_IMPORTED_MODULE_1__.PrismicRichText, {\n                field: slice.item.content\n            }, void 0, false, {\n                fileName: \"/Users/elodie/bonjouridol/src/app/slices/RichText/index.js\",\n                lineNumber: 15,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/elodie/bonjouridol/src/app/slices/RichText/index.js\",\n        lineNumber: 10,\n        columnNumber: 5\n    }, undefined);\n};\n_c = RichText;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RichText);\nvar _c;\n$RefreshReg$(_c, \"RichText\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvc2xpY2VzL1JpY2hUZXh0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7OztBQUFBOzs7O0NBSUM7QUFDa0Q7QUFFbkQsTUFBTUMsV0FBVztRQUFDLEVBQUVDLEtBQUssRUFBRTtJQUN6QixxQkFDRSw4REFBQ0M7UUFDQ0MsbUJBQWlCRixNQUFNRyxVQUFVO1FBQ2pDQyx3QkFBc0JKLE1BQU1LLFNBQVM7OzBCQUVyQyw4REFBQ1AsNkRBQWVBO2dCQUFDUSxPQUFPTixNQUFNTyxJQUFJLENBQUNDLEtBQUs7Ozs7OzswQkFDeEMsOERBQUNWLDZEQUFlQTtnQkFBQ1EsT0FBT04sTUFBTU8sSUFBSSxDQUFDRSxPQUFPOzs7Ozs7Ozs7Ozs7QUFHaEQ7S0FWTVY7QUFZTiwrREFBZUEsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBwL3NsaWNlcy9SaWNoVGV4dC9pbmRleC5qcz8yY2FmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydChcIkBwcmlzbWljaW8vY2xpZW50XCIpLkNvbnRlbnQuUmljaFRleHRTbGljZX0gUmljaFRleHRTbGljZVxuICogQHR5cGVkZWYge2ltcG9ydChcIkBwcmlzbWljaW8vcmVhY3RcIikuU2xpY2VDb21wb25lbnRQcm9wczxSaWNoVGV4dFNsaWNlPn0gUmljaFRleHRQcm9wc1xuICogQHBhcmFtIHtSaWNoVGV4dFByb3BzfVxuICovXG5pbXBvcnQgeyBQcmlzbWljUmljaFRleHQgfSBmcm9tIFwiQHByaXNtaWNpby9yZWFjdFwiO1xuXG5jb25zdCBSaWNoVGV4dCA9ICh7IHNsaWNlIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8c2VjdGlvblxuICAgICAgZGF0YS1zbGljZS10eXBlPXtzbGljZS5zbGljZV90eXBlfVxuICAgICAgZGF0YS1zbGljZS12YXJpYXRpb249e3NsaWNlLnZhcmlhdGlvbn1cbiAgICA+XG4gICAgICA8UHJpc21pY1JpY2hUZXh0IGZpZWxkPXtzbGljZS5pdGVtLnRpdGxlfSAvPlxuICAgICAgPFByaXNtaWNSaWNoVGV4dCBmaWVsZD17c2xpY2UuaXRlbS5jb250ZW50fSAvPlxuICAgIDwvc2VjdGlvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJpY2hUZXh0O1xuIl0sIm5hbWVzIjpbIlByaXNtaWNSaWNoVGV4dCIsIlJpY2hUZXh0Iiwic2xpY2UiLCJzZWN0aW9uIiwiZGF0YS1zbGljZS10eXBlIiwic2xpY2VfdHlwZSIsImRhdGEtc2xpY2UtdmFyaWF0aW9uIiwidmFyaWF0aW9uIiwiZmllbGQiLCJpdGVtIiwidGl0bGUiLCJjb250ZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/slices/RichText/index.js\n"));

/***/ })

});