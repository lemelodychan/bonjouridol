import { draftMode, cookies } from "next/headers";
import { preview } from './_node_modules/@prismicio/client/dist/cookie.js';
const isPrismicPreviewData = (input) => {
  return typeof input === "object" && input !== null && "ref" in input;
};
const enableAutoPreviews = (config) => {
  if ("previewData" in config && config.previewData) {
    if (isPrismicPreviewData(config.previewData)) {
      config.client.queryContentFromRef(config.previewData.ref);
    }
  } else if ("req" in config && config.req) {
    config.client.enableAutoPreviewsFromReq(config.req);
  } else {
    config.client.queryContentFromRef(() => {
      var _a;
      let isDraftModeEnabled = false;
      try {
        isDraftModeEnabled = draftMode().isEnabled;
      } catch {
        return;
      }
      if (!isDraftModeEnabled) {
        return;
      }
      let cookie;
      try {
        cookie = (_a = cookies().get(preview)) == null ? void 0 : _a.value;
      } catch {
        return;
      }
      if (cookie && /\.prismic\.io/.test(cookie)) {
        return cookie;
      }
    });
  }
};
export {
  enableAutoPreviews
};
//# sourceMappingURL=enableAutoPreviews.js.map
