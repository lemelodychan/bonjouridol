'use client';
'use client';
import { jsx, Fragment } from "react/jsx-runtime";
import Image from "next/image";
import { buildURL } from "imgix-url-builder";
import { devMsg } from "./lib/devMsg.js";
import { imgixLoader } from "./imgixLoader.js";
import { imageThumbnail } from './_node_modules/@prismicio/client/dist/helpers/isFilled.js';
const castInt = (input) => {
  if (typeof input === "number" || typeof input === "undefined") {
    return input;
  } else {
    const parsed = Number.parseInt(input);
    if (Number.isNaN(parsed)) {
      return void 0;
    } else {
      return parsed;
    }
  }
};
const PrismicNextImage = ({ field, imgixParams = {}, alt, fallbackAlt, fill, width, height, fallback = null, ...restProps }) => {
  if (process.env.NODE_ENV !== "production") {
    if (typeof alt === "string" && alt !== "") {
      console.warn(`[PrismicNextImage] The "alt" prop can only be used to declare an image as decorative by passing an empty string (alt="") but was provided a non-empty string. You can resolve this warning by removing the "alt" prop or changing it to alt="". For more details, see ${devMsg("alt-must-be-an-empty-string")}`);
    }
    if (typeof fallbackAlt === "string" && fallbackAlt !== "") {
      console.warn(`[PrismicNextImage] The "fallbackAlt" prop can only be used to declare an image as decorative by passing an empty string (fallbackAlt="") but was provided a non-empty string. You can resolve this warning by removing the "fallbackAlt" prop or changing it to fallbackAlt="". For more details, see ${devMsg("alt-must-be-an-empty-string")}`);
    }
  }
  if (imageThumbnail(field)) {
    const resolvedImgixParams = imgixParams;
    for (const x in imgixParams) {
      if (resolvedImgixParams[x] === null) {
        resolvedImgixParams[x] = void 0;
      }
    }
    const src = buildURL(field.url, imgixParams);
    const ar = field.dimensions.width / field.dimensions.height;
    const castedWidth = castInt(width);
    const castedHeight = castInt(height);
    let resolvedWidth = castedWidth ?? field.dimensions.width;
    let resolvedHeight = castedHeight ?? field.dimensions.height;
    if (castedWidth != null && castedHeight == null) {
      resolvedHeight = castedWidth / ar;
    } else if (castedWidth == null && castedHeight != null) {
      resolvedWidth = castedHeight * ar;
    }
    const resolvedAlt = alt ?? (field.alt || fallbackAlt);
    if (process.env.NODE_ENV !== "production" && typeof resolvedAlt !== "string") {
      console.error(`[PrismicNextImage] The following image is missing an "alt" property. Please add Alternative Text to the image in Prismic. To mark the image as decorative instead, add one of \`alt=""\` or \`fallbackAlt=""\`.`, src);
    }
    let ResolvedImage = Image;
    if ("default" in ResolvedImage) {
      ResolvedImage = ResolvedImage.default;
    }
    return jsx(ResolvedImage, { src, width: fill ? void 0 : resolvedWidth, height: fill ? void 0 : resolvedHeight, alt: resolvedAlt, fill, loader: imgixLoader, ...restProps });
  } else {
    return jsx(Fragment, { children: fallback });
  }
};
export {
  PrismicNextImage
};
//# sourceMappingURL=PrismicNextImage.js.map
