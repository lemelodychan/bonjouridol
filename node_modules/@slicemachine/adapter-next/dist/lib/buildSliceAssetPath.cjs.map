{"version":3,"file":"buildSliceAssetPath.cjs","sources":["../../../src/lib/buildSliceAssetPath.ts"],"sourcesContent":["import { SliceMachineContext } from \"@slicemachine/plugin-kit\";\nimport * as path from \"node:path\";\n\nimport { PluginOptions } from \"../types\";\n\nimport { buildSliceDirectoryPath } from \"./buildSliceDirectoryPath\";\n\ntype BuildSliceAssetPathArgs = {\n\tlibraryID: string;\n\tsliceID: string;\n\tassetID: string;\n\tactions: SliceMachineContext<PluginOptions>[\"actions\"];\n\thelpers: SliceMachineContext<PluginOptions>[\"helpers\"];\n};\n\nexport const buildSliceAssetPath = async (\n\targs: BuildSliceAssetPathArgs,\n): Promise<string> => {\n\tconst { model } = await args.actions.readSliceModel({\n\t\tlibraryID: args.libraryID,\n\t\tsliceID: args.sliceID,\n\t});\n\n\treturn path.join(\n\t\tbuildSliceDirectoryPath({\n\t\t\tlibraryID: args.libraryID,\n\t\t\tmodel,\n\t\t\thelpers: args.helpers,\n\t\t}),\n\t\targs.assetID,\n\t);\n};\n"],"names":["path","buildSliceDirectoryPath"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAea,MAAA,sBAAsB,OAClC,SACoB;AACpB,QAAM,EAAE,MAAK,IAAK,MAAM,KAAK,QAAQ,eAAe;AAAA,IACnD,WAAW,KAAK;AAAA,IAChB,SAAS,KAAK;AAAA,EAAA,CACd;AAEM,SAAAA,gBAAK,KACXC,gDAAwB;AAAA,IACvB,WAAW,KAAK;AAAA,IAChB;AAAA,IACA,SAAS,KAAK;AAAA,EAAA,CACd,GACD,KAAK,OAAO;AAEd;;"}