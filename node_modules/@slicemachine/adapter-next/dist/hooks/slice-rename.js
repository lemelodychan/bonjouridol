import * as fse from "fs-extra";
import { buildSliceDirectoryPath } from "../lib/buildSliceDirectoryPath.js";
import { rejectIfNecessary } from "../lib/rejectIfNecessary.js";
import { updateSliceModelFile } from "../lib/updateSliceModelFile.js";
import { upsertGlobalContentTypes } from "../lib/upsertGlobalContentTypes.js";
import { upsertSliceLibraryIndexFile } from "../lib/upsertSliceLibraryIndexFile.js";
const sliceRename = async (data, context) => {
  const { model: currentModel } = await context.actions.readSliceModel({
    libraryID: data.libraryID,
    sliceID: data.model.id
  });
  await fse.move(buildSliceDirectoryPath({
    libraryID: data.libraryID,
    model: currentModel,
    helpers: context.helpers
  }), buildSliceDirectoryPath({
    libraryID: data.libraryID,
    model: data.model,
    helpers: context.helpers
  }));
  await updateSliceModelFile({
    libraryID: data.libraryID,
    model: data.model,
    ...context
  });
  rejectIfNecessary(await Promise.allSettled([
    upsertGlobalContentTypes(context),
    upsertSliceLibraryIndexFile({ libraryID: data.libraryID, ...context })
  ]));
};
export {
  sliceRename
};
//# sourceMappingURL=slice-rename.js.map
