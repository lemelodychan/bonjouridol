import { defineSliceMachinePlugin } from "@slicemachine/plugin-kit";
import { name } from "./packages/adapter-next/package.json.js";
import { projectInit } from "./hooks/project-init.js";
import { customTypeAssetDelete } from "./hooks/customType-asset-delete.js";
import { customTypeAssetRead } from "./hooks/customType-asset-read.js";
import { customTypeAssetUpdate } from "./hooks/customType-asset-update.js";
import { customTypeCreate } from "./hooks/customType-create.js";
import { customTypeDelete } from "./hooks/customType-delete.js";
import { customTypeLibraryRead } from "./hooks/customTypeLibrary-read.js";
import { customTypeRead } from "./hooks/customType-read.js";
import { customTypeRename } from "./hooks/customType-rename.js";
import { customTypeUpdate } from "./hooks/customType-update.js";
import { sliceAssetDelete } from "./hooks/slice-asset-delete.js";
import { sliceAssetRead } from "./hooks/slice-asset-read.js";
import { sliceAssetUpdate } from "./hooks/slice-asset-update.js";
import { sliceCreate } from "./hooks/slice-create.js";
import { sliceDelete } from "./hooks/slice-delete.js";
import { sliceLibraryRead } from "./hooks/sliceLibrary-read.js";
import { sliceRead } from "./hooks/slice-read.js";
import { sliceRename } from "./hooks/slice-rename.js";
import { sliceUpdate } from "./hooks/slice-update.js";
import { snippetRead } from "./hooks/snippet-read.js";
import { documentationRead } from "./hooks/documentation-read.js";
import { sliceSimulatorSetupRead } from "./hooks/sliceSimulator-setup-read.js";
const plugin = defineSliceMachinePlugin({
  meta: {
    name
  },
  defaultOptions: {
    format: true,
    lazyLoadSlices: true
  },
  setup({ hook }) {
    hook("project:init", projectInit);
    hook("slice:create", sliceCreate);
    hook("slice:update", sliceUpdate);
    hook("slice:rename", sliceRename);
    hook("slice:delete", sliceDelete);
    hook("slice:read", sliceRead);
    hook("slice:asset:update", sliceAssetUpdate);
    hook("slice:asset:delete", sliceAssetDelete);
    hook("slice:asset:read", sliceAssetRead);
    hook("slice-library:read", sliceLibraryRead);
    hook("custom-type:create", customTypeCreate);
    hook("custom-type:update", customTypeUpdate);
    hook("custom-type:rename", customTypeRename);
    hook("custom-type:delete", customTypeDelete);
    hook("custom-type:read", customTypeRead);
    hook("custom-type:asset:update", customTypeAssetUpdate);
    hook("custom-type:asset:delete", customTypeAssetDelete);
    hook("custom-type:asset:read", customTypeAssetRead);
    hook("custom-type-library:read", customTypeLibraryRead);
    hook("snippet:read", snippetRead);
    hook("documentation:read", documentationRead);
    hook("slice-simulator:setup:read", sliceSimulatorSetupRead);
  }
});
export {
  plugin
};
//# sourceMappingURL=plugin.js.map
