"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const pluginKit = require("@slicemachine/plugin-kit");
const _package = require("./packages/adapter-next/package.json.cjs");
const projectInit = require("./hooks/project-init.cjs");
const customTypeAssetDelete = require("./hooks/customType-asset-delete.cjs");
const customTypeAssetRead = require("./hooks/customType-asset-read.cjs");
const customTypeAssetUpdate = require("./hooks/customType-asset-update.cjs");
const customTypeCreate = require("./hooks/customType-create.cjs");
const customTypeDelete = require("./hooks/customType-delete.cjs");
const customTypeLibraryRead = require("./hooks/customTypeLibrary-read.cjs");
const customTypeRead = require("./hooks/customType-read.cjs");
const customTypeRename = require("./hooks/customType-rename.cjs");
const customTypeUpdate = require("./hooks/customType-update.cjs");
const sliceAssetDelete = require("./hooks/slice-asset-delete.cjs");
const sliceAssetRead = require("./hooks/slice-asset-read.cjs");
const sliceAssetUpdate = require("./hooks/slice-asset-update.cjs");
const sliceCreate = require("./hooks/slice-create.cjs");
const sliceDelete = require("./hooks/slice-delete.cjs");
const sliceLibraryRead = require("./hooks/sliceLibrary-read.cjs");
const sliceRead = require("./hooks/slice-read.cjs");
const sliceRename = require("./hooks/slice-rename.cjs");
const sliceUpdate = require("./hooks/slice-update.cjs");
const snippetRead = require("./hooks/snippet-read.cjs");
const documentationRead = require("./hooks/documentation-read.cjs");
const sliceSimulatorSetupRead = require("./hooks/sliceSimulator-setup-read.cjs");
const plugin = pluginKit.defineSliceMachinePlugin({
  meta: {
    name: _package.name
  },
  defaultOptions: {
    format: true,
    lazyLoadSlices: true
  },
  setup({ hook }) {
    hook("project:init", projectInit.projectInit);
    hook("slice:create", sliceCreate.sliceCreate);
    hook("slice:update", sliceUpdate.sliceUpdate);
    hook("slice:rename", sliceRename.sliceRename);
    hook("slice:delete", sliceDelete.sliceDelete);
    hook("slice:read", sliceRead.sliceRead);
    hook("slice:asset:update", sliceAssetUpdate.sliceAssetUpdate);
    hook("slice:asset:delete", sliceAssetDelete.sliceAssetDelete);
    hook("slice:asset:read", sliceAssetRead.sliceAssetRead);
    hook("slice-library:read", sliceLibraryRead.sliceLibraryRead);
    hook("custom-type:create", customTypeCreate.customTypeCreate);
    hook("custom-type:update", customTypeUpdate.customTypeUpdate);
    hook("custom-type:rename", customTypeRename.customTypeRename);
    hook("custom-type:delete", customTypeDelete.customTypeDelete);
    hook("custom-type:read", customTypeRead.customTypeRead);
    hook("custom-type:asset:update", customTypeAssetUpdate.customTypeAssetUpdate);
    hook("custom-type:asset:delete", customTypeAssetDelete.customTypeAssetDelete);
    hook("custom-type:asset:read", customTypeAssetRead.customTypeAssetRead);
    hook("custom-type-library:read", customTypeLibraryRead.customTypeLibraryRead);
    hook("snippet:read", snippetRead.snippetRead);
    hook("documentation:read", documentationRead.documentationRead);
    hook("slice-simulator:setup:read", sliceSimulatorSetupRead.sliceSimulatorSetupRead);
  }
});
exports.plugin = plugin;
//# sourceMappingURL=plugin.cjs.map
